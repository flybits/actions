name: Deployment
author: Petar Kramaric
description: GitHub action for deploying android applications
inputs:
  github_token:
    description: A GitHub personal access token with repo scope to access private repositories.
    required: true
  keystore_file:
    description: A keystore file in base64
    required: true
  alias:
    description: An alias used for the keystore file
    required: true
  keystore_password:
    description: The password used for the keystore
    required: true
  alias_password:
    description: The password used for the alias
    required: true
  service_account_json:
    description: The JSON file for the service account
    required: true
  branch:
    description: Which branch is running the job
    required: true
    type: choice
    options:
      - main
  version:
    description: "Semver type of new version (major / minor / patch)"
    required: true
    type: choice
    options:
      - patch
      - minor
      - major
  who_trigger:
    description: "Who trigger the pipeline"
    required: true

runs:
  using: "composite"
  steps:

    #Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v4

    #Validate Inputs
    - name: Inputs validation
      shell: bash
      run: |
        current_version=$(cat VERSION_NAME)
        [[ "${{ inputs.github_token }}" ]] || { echo "github_token input is empty" ; exit 1; }
        [[ "${{ inputs.branch }}" ]] || { echo "branch input is empty" ; exit 1; }
       
      #JDK 1.8
    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: 'oracle'
        java-version: '18'
        cache: 'gradle'

      #GRANT RIGHTS
    - name: Grant rights
      shell: bash
      run: chmod +x build.gradle

      #BUILD GRADLE
    - name: Build with Gradle
      shell: bash
      id: build
      run: ./gradlew build

      #BUILD RELEASE GRADLE
    - name: Build Release
      shell: bash
      id: buildRelease
      run: ./gradlew bundleRelease

      #Set up Android Build Tools
    - name: Setup build tool version variable
      shell: bash
      run: |
        BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1)
        echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
        echo Last build tool version is: $BUILD_TOOL_VERSION

      #SIGN APK
    - name: Sign AAB
      id: sign_app
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/bundle/release
        signingKeyBase64: ${{ inputs.keystore_file }}
        alias: ${{ inputs.alias }}
        keyStorePassword: ${{ inputs.keystore_password }}
        keyPassword: ${{ inputs.alias_password }}
      env:
        BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}

      #CREATE JSON SERVICE ACCOUNT
    - name: Create service_account.json
      shell: bash
      id: createServiceAccount
      run: echo '${{ inputs.service_account_json }}' > service_account.json

      #UPLOAD TO PLAY STORE
    - name: Deploy to Play Store (BETA)
      id: deploy
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJson: service_account.json
        packageName: com.flybits.android.life.app
        releaseFiles: ${{steps.sign_app.outputs.signedReleaseFile}}
        track: beta